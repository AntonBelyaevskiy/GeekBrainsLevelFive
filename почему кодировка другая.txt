План работы:
1)	Пишем клиент-серверное приложение «Облачное хранилище», сетевое взаимодействие реализуется через сокеты;
2)	На сервере для каждого клиента есть отдельный каталог с файлами этого клиента;
3)	При подключении клиент должен авторизоваться;
4)	На первом этапе у клиента на сервере должна просто папка с файлами без подкаталогов, как только это будет готово, можете добавлять подкаталоги(усложнение);
5)	Интерфейс клиента реализуется на JavaFX;
6)	Сборка и управление проектом осуществляется с помощью Apache Maven;
7)	Клиент должен иметь возможность: заливать файлы на сервер, скачивать файлы с сервера, удалять/переименовывать файлы на сервере;
8)	Регистрация клиента на сервере делать по желанию;
Дополнения:
1)	Реализация Drag&Drop на клиенте;
2)	*** Sharing файлов между учетными записями;
Вопросы к вам:
1)	Как вы собираетесь передавать файлы? [поток байтов/свой протокол передачи, сериализация, либо ваш вариант]
2)	Нужна ли вам база данных?
3)	Как вы собираетесь давать команды серверу? (на переименование файла, удаление файла, список файлов и т.д.)


////////////////////////////////ОПИСАНИЕ////////////////////////////////

Что сделано:
1. Графический интерфейс приложения
2. Передача файла из папки на клиенте, в папку на сервере (сериализация)
3. Передача файла из папки на сервере, в папку на клиенте (сериализация)
4. Удаление файла в локальной папке
5. Удаление файла в папке на сервере

Что ещё нужно сделать:
1. Авторизацию (вход в приложение по логину и паролю)
2. Регистрацию (занесение логина и пароля в БД)
3. Обновление списка файлов при манипуляциях с файлами (копирование, удалении)
4. Действия при копировании файла, если файл с таким именем на другой стороне уже есть (сейчас имеющийся файл удаляется, новый файл добавляется)
5. Передачу больших файлов
6. Реализовать DragAndPush
7. Реализовать передачу при помощи собственного протокола

////////////////////////////////СТРУКТУРА////////////////////////////////

////////////////////////////////ОПИСАНИЕ////////////////////////////////

Что сделано:
1. Графический интерфейс приложения
2. Передача файла из папки на клиенте, в папку на сервере (сериализация)
3. Передача файла из папки на сервере, в папку на клиенте (сериализация)
4. Удаление файла в локальной папке
5. Удаление файла в папке на сервере

Что ещё нужно сделать:
1. Авторизацию (вход в приложение по логину и паролю)
2. Регистрацию (занесение логина и пароля в БД)
3. Обновление списка файлов при манипуляциях с файлами (копирование, удалении)
4. Действия при копировании файла, если файл с таким именем на другой стороне уже есть (сейчас имеющийся файл удаляется, новый файл добавляется)
5. Передачу больших файлов
6. Реализовать DragAndPush
7. Реализовать передачу при помощи собственного протокола

////////////////////////////////СТРУКТУРА////////////////////////////////

////////////////////////////////ОПИСАНИЕ////////////////////////////////

Что сделано:
1. Графический интерфейс приложения
2. Передача файла из папки на клиенте, в папку на сервере (сериализация)
3. Передача файла из папки на сервере, в папку на клиенте (сериализация)
4. Удаление файла в локальной папке
5. Удаление файла в папке на сервере

Что ещё нужно сделать:
1. Авторизацию (вход в приложение по логину и паролю)
2. Регистрацию (занесение логина и пароля в БД)
3. Обновление списка файлов при манипуляциях с файлами (копирование, удалении)
4. Действия при копировании файла, если файл с таким именем на другой стороне уже есть (сейчас имеющийся файл удаляется, новый файл добавляется)
5. Передачу больших файлов
6. Реализовать DragAndPush
7. Реализовать передачу при помощи собственного протокола

////////////////////////////////СТРУКТУРА////////////////////////////////