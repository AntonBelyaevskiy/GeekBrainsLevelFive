////////////////////////////////ОПИСАНИЕ////////////////////////////////

Что сделано:
1. Графический интерфейс приложения
2. Передача файла из папки на клиенте, в папку на сервере (сериализация)
3. Передача файла из папки на сервере, в папку на клиенте (сериализация)
4. Удаление файла в локальной папке
5. Удаление файла в папке на сервере

Что ещё нужно сделать:
1. Авторизацию (вход в приложение по логину и паролю)
2. Регистрацию (занесение логина и пароля в БД)
3. Обновление списка файлов при манипуляциях с файлами (копирование, удалении)
4. Действия при копировании файла, если файл с таким именем на другой стороне уже есть (сейчас имеющийся файл удаляется, новый файл добавляется)
5. Передачу больших файлов
6. Реализовать DragAndPush
7. Реализовать передачу при помощи собственного протокола

////////////////////////////////СТРУКТУРА////////////////////////////////

Классы на клиенте
CloudController - управление клиентом
CloudNetwork - структура клиента
Main - запуск клиента

Классы на сервере
CloudAuthGateway - [блок сервера] для обработки авторизации
CloudServer - структура сервера
CloudServerHandler - [блок сервера] для обработки поступаемых данных
Main - запускает сервер

Общие классы
CloudMessage - абстрактный общий класс для переправляемых данных
CloudFileList - отвечает за передачу списка файлов
CloudFile - отвечает за передачу файлов
CloudCommand - отвечает за передачу команд
CloudAuthorization - отвечает за передачу данных авторизации

ElementForTableView - описывает строки, для отображении списка файлов
(содержит три поля: название файла, размер файла, дата добавления файла)